// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AnalysisType - The type of analysis to run
type AnalysisType string

const (
	AnalysisTypeAiVisionTagging    AnalysisType = "ai_vision_tagging"
	AnalysisTypeAiVisionModeration AnalysisType = "ai_vision_moderation"
	AnalysisTypeAiVisionGeneral    AnalysisType = "ai_vision_general"
	AnalysisTypeCaptioning         AnalysisType = "captioning"
	AnalysisTypeCldFashion         AnalysisType = "cld_fashion"
	AnalysisTypeCldText            AnalysisType = "cld_text"
	AnalysisTypeCoco               AnalysisType = "coco"
	AnalysisTypeGoogleTagging      AnalysisType = "google_tagging"
	AnalysisTypeHumanAnatomy       AnalysisType = "human_anatomy"
	AnalysisTypeLvis               AnalysisType = "lvis"
	AnalysisTypeShopClassifier     AnalysisType = "shop_classifier"
	AnalysisTypeUnidet             AnalysisType = "unidet"
)

func (e AnalysisType) ToPointer() *AnalysisType {
	return &e
}
func (e *AnalysisType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ai_vision_tagging":
		fallthrough
	case "ai_vision_moderation":
		fallthrough
	case "ai_vision_general":
		fallthrough
	case "captioning":
		fallthrough
	case "cld_fashion":
		fallthrough
	case "cld_text":
		fallthrough
	case "coco":
		fallthrough
	case "google_tagging":
		fallthrough
	case "human_anatomy":
		fallthrough
	case "lvis":
		fallthrough
	case "shop_classifier":
		fallthrough
	case "unidet":
		*e = AnalysisType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalysisType: %v", v)
	}
}
