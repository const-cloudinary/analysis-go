// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/const-cloudinary/analysis-go/models/components"
)

type AnalyzeURIGlobals struct {
	// The name of your Cloudinary cloud
	CloudName *string `pathParam:"style=simple,explode=false,name=cloud_name"`
}

func (o *AnalyzeURIGlobals) GetCloudName() *string {
	if o == nil {
		return nil
	}
	return o.CloudName
}

type AnalyzeURIRequest struct {
	// The name of your Cloudinary cloud
	CloudName *string `pathParam:"style=simple,explode=false,name=cloud_name"`
	// A JSON object containing request parameters
	AnalyzeURIRequest components.AnalyzeURIRequest `request:"mediaType=application/json"`
}

func (o *AnalyzeURIRequest) GetCloudName() *string {
	if o == nil {
		return nil
	}
	return o.CloudName
}

func (o *AnalyzeURIRequest) GetAnalyzeURIRequest() components.AnalyzeURIRequest {
	if o == nil {
		return components.AnalyzeURIRequest{}
	}
	return o.AnalyzeURIRequest
}

type AnalyzeURIResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Analysis succeeded
	AnalyzeResponse *components.AnalyzeResponse
}

func (o *AnalyzeURIResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AnalyzeURIResponse) GetAnalyzeResponse() *components.AnalyzeResponse {
	if o == nil {
		return nil
	}
	return o.AnalyzeResponse
}
